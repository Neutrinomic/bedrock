type Action = variant { Meta : MetaAction; Ledger : LedgerAction };
type ApplyStatus = variant {
  Ok;
  Err : record { error : text };
  Pass : record { reason : text };
};
type LedgerAction = variant {
  Coinbase : record { to : blob; amount : nat };
  Transfer : record { to : blob; from : blob; amount : nat };
};
type LedgerEvent = variant {
  Coinbase : record { to : blob; amount : nat };
  Transfer : record { to : blob; from : blob; amount : nat };
};
type MetaAction = variant {
  SetChainName : record { name : text };
  BumpCounter;
};
type Result = variant { Ok; Err : text };
service : {
  apply_block : (vec Action) -> (vec ApplyStatus);
  events_len : () -> (nat64) query;
  get_balance : (blob) -> (nat) query;
  get_event : (nat64) -> (opt LedgerEvent) query;
  ledger_coinbase : (blob, nat) -> ();
  ledger_transfer : (blob, blob, nat) -> (Result);
  meta_bump_counter : () -> (nat64);
  meta_get_chain_name : () -> (opt text) query;
  meta_get_counter : () -> (nat64) query;
  meta_set_chain_name : (text) -> ();
  txn_commit_all : () -> ();
  txn_commit_oldest : () -> ();
  txn_commit_top : () -> ();
  txn_push_layer : () -> ();
  txn_revert_top : () -> ();
}
